{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","visible","setVisible","goods","setGoods","minLength","setMinLength","renderList","filter","item","length","className","type","onClick","reverse","sort","a","b","localeCompare","value","onChange","event","target","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuGaC,EApGO,WACpB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAASF,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAmBMC,EAAaJ,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,KAEvD,OACE,sBAAKM,UAAU,MAAf,UACGV,GACC,wBACEU,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAMX,GAAW,IAH5B,mBAQF,qBAAKS,UAAU,aAAf,UAEKV,GACC,qCACE,oBAAIU,UAAU,aAAd,mBACA,sBAAKA,UAAU,YAAf,UACE,wBACEA,UAAU,mBACVE,QAtCA,WACdT,EAAS,YAAID,GAAOW,YAsCNF,KAAK,SAHP,qBAOA,wBACED,UAAU,mBACVE,QAzCQ,WACtBT,EAAS,YAAID,GAAOY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,QAyCrCL,KAAK,SAHP,iCAOA,wBACEC,QA3CK,WACnBT,EAAS,YAAID,GAAOY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEN,OAASO,EAAEP,YA2ClCE,KAAK,SACLD,UAAU,mBAHZ,4BAOA,wBACEQ,MAAOd,EACPe,SAAU,SAACC,GAAD,OACRf,GAAce,EAAMC,OAAOH,QAE7BR,UAAU,gBALZ,SAOG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIY,KAAI,SAAAd,GAAI,OACvC,wBAAQU,MAAOV,EAAf,SACGA,GADuBA,QAM9B,wBACEI,QA5DF,WACZT,EAAS,GAAD,OAAKN,IACbQ,EAAa,IA2DCM,KAAK,SACLD,UAAU,mBAHZ,sBASF,oBAAIA,UAAU,YAAd,SACGJ,EAAWgB,KAAI,SAAAC,GAAI,OAClB,6BACGA,GADMA,iBCpG3BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3f7c65f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [visible, setVisible] = useState(true);\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [minLength, setMinLength] = useState(1);\n\n  const reverse = () => {\n    setGoods([...goods].reverse());\n  };\n\n  const sortByAlphabhet = () => {\n    setGoods([...goods].sort((a, b) => a.localeCompare(b)));\n  };\n\n  const sortByLength = () => {\n    setGoods([...goods].sort((a, b) => a.length - b.length));\n  };\n\n  const reset = () => {\n    setGoods([...goodsFromServer]);\n    setMinLength(1);\n  };\n\n  const renderList = goods.filter(item => item.length >= minLength);\n\n  return (\n    <div className=\"App\">\n      {visible && (\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => setVisible(false)}\n        >\n          Start\n        </button>\n      )}\n      <div className=\"App__block\">\n        {\n          !visible && (\n            <>\n              <h1 className=\"App__title\">Goods</h1>\n              <div className=\"App__body\">\n                <button\n                  className=\"App__button-menu\"\n                  onClick={reverse}\n                  type=\"button\"\n                >\n                  Reverse\n                </button>\n                <button\n                  className=\"App__button-menu\"\n                  onClick={sortByAlphabhet}\n                  type=\"button\"\n                >\n                  Sort alphabetically\n                </button>\n                <button\n                  onClick={sortByLength}\n                  type=\"button\"\n                  className=\"App__button-menu\"\n                >\n                  Sort by length\n                </button>\n                <select\n                  value={minLength}\n                  onChange={(event) => (\n                    setMinLength(+event.target.value)\n                  )}\n                  className=\"App__selector\"\n                >\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(item => (\n                    <option value={item} key={item}>\n                      {item}\n                    </option>\n                  ))}\n                </select>\n\n                <button\n                  onClick={reset}\n                  type=\"button\"\n                  className=\"App__button-menu\"\n                >\n                  Reset\n                </button>\n              </div>\n\n              <ul className=\"App__list\">\n                {renderList.map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}